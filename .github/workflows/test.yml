name: TEST
on:
  pull_request:
    branches:
      - main

jobs:
  prepare:
    name: Get changed groovy file(s)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # To retrieve all commits
      - name: Get changed groovy file(s)
        id: changes-as-json
        shell: bash
        run: |
          # include file pattern
          INCLUDE="'*.groovy' '*Jenkinsfile'"
          # helper fuction to create array in jeson format
          json_array() {
            echo -n '['
            while [ $# -gt 0 ]; do
              x=${1//\\/\\\\}
              echo -n \"${x//\"/\\\"}\"
              [ $# -gt 1 ] && echo -n ', '
              shift
            done
            echo ']'
          }
          # get changed file(s)
          FIELES=$( git diff --name-only origin/main -- ${INCLUDE} | sed ':a; N; $!ba; s/\n/ /g' || echo )
          echo FIELES=$( json_array ${FIELES[@]} ) >> $GITHUB_OUTPUT
          # get changed directorie(s)
          DIRECTORIES=$( git diff --name-only origin/main -- ${INCLUDE} | xargs dirname | sort | uniq | sed ':a; N; $!ba; s/\n/ /g' || echo )
          echo DIRECTORIES=$( json_array ${DIRECTORIES[@]} ) >> $GITHUB_OUTPUT
          # set if any file(s) changed
          ANY_CHANGED='false'
          if [[ ! -z "${FIELES}" ]]; then
              ANY_CHANGED='true'
          fi
          echo ANY_CHANGED=${ANY_CHANGED} >> $GITHUB_OUTPUT
          # debug only
          echo ${DIRECTORIES}
          echo ${FIELES}
          echo ${ANY_CHANGED}
    outputs:
      FIELES: ${{ steps.changes-as-json.outputs.FIELES }}
      DIRECTORIES: ${{ steps.changes-as-json.outputs.DIRECTORIES }}
      ANY_CHANGED: ${{ steps.changes-as-json.outputs.ANY_CHANGED }}

  validate:
    name: Validate changed file(s)
    if: needs.prepare.outputs.ANY_CHANGED == 'true'
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        FILE: ${{ fromJson(needs.prepare.outputs.FIELES) }}
    steps:
      - uses: actions/checkout@v3
      - name: Validate file
        run: |
          # debug only
          echo ${{ matrix.FILE }}
          
          # prepare linter
          npm install -g npm-groovy-lint
          
          npm-groovy-lint -l warning -f ${{ matrix.FILE }}
